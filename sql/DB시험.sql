/*
    서술형평가
    3개의 능력단위
    데이터베이스 구현 (4문항)
        생성 DDL, 개념
    SQL활용(4문항)
        DML SQL
    SQL응용(4문항)
        개념, ANSI, 분석함수
*/


/*
    데이터베이스 객체
    
    테이블 :                 관계형 데이터베이스를 구성하는 기본 데이터 구조로
                            DBMS상에서 가장 기본적인 객체로 로우(행) 컬럼(열)로
                            구성된 2차원 형태(표)의 객체이다.
                            데이터를 잘 관리하기 위해 제약조건이 존재하며
                            데이터를 이루는 컬럼은 하나의 타입과 사이즈를 갖는다.
                
                
    뷰(view) :              하나 이상의 테이블을 연결해 마치 테이블처럼 사용하는 객체
                            실제 데이터는 뷰를 구성하는 테이블에 담겨있지만
                            테이블처럼 사용할 수 있고
                            단순 뷰는 하나의 테이블로 생성하여 INSERT/UPDATE/DELETE가 가능하다.
                            복합 뷰는 하나 이상의 테이블로 생성하여 INSERT/UPDATE/DELETE가 불가능하다.
                            실제 테이블의 일부 컬럼을 숨길 수 있기 때문에
                            보안의 목적으로 사용이 가능함.
                            또는 자주 사용하는 복잡한 SQL이 있다면
                            뷰로 만들어 편리하게 이용이 가능하다.
                        
                            
    시노님(synonim) :       '동의어'란 뜻으로 데이터베이스 객체의 고유이름의
                            동의어를 만드는 것
                            PUBLIC, PRIVATE 시노님이 있으며
                            PUBLIC은 모든 사용자 접근 가능
                     
                            PRIVATE는 특정 권한이 있는 사용자만 사용가능
                            사용목적은 객체의 이름을 감추어 보안적으로 유리함.
                            고정된 동의어를 사용하면객체실제 이름이 변경되어도
                            동의어는 동일하기 때문에 개발에 유리함.
                        
                        
    함수(FUNCTION) :        특정 연산을 하고 반환하는 객체로
                            프로시저와 동일하게 절차형(PL/SQL)을 활용하며
                            일련의 연산 처리 결과를 단일 값으로 반환함.
                            DML문에서 사용이 가능하며 클라이언트쪽에서 실행됨
                        
                        
    프로시저(PROCEDURE) :    업무적으로 복잡한 구문을 별도의 구문으로 작성하여
                            DB에 저장하고 실행가능한 고유한 기능을 수행하는 객체
                            함수와 유사하지만 서버에서 실행되며 리턴값을 0 ~ n개로 설정가능
                            DML문에서는 사용하지 못하며 PL/SQL문에서 사용가능
                        
                        
    트랜잭션(Transaction):   '거래'라는 뜻으로 은행에서는 입금과 출금을
                            하는 거래를 뜻하며 사용자, 오라클 서버, 개발자, DBA등에게
                            데이터 일치성과 동시발생을 보장하기 위해 트랜잭션을 처리한다.
                            업무의 가장 작은 단위로 구분하여 해당 업무가 성공하면 commit;
                            하나라도 실패하면 rollback; 을 통해 작업 이력을 제거한다.
*/